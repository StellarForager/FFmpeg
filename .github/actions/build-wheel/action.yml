name: Build Wheel Action
description: Action for building FFmpeg and package wheel.
inputs:
  OS:
    description: "OS name"
    required: false
    default: "linux"
    type: string
  ARCH:
    description: "Architecture"
    required: false
    default: ""
    type: string
  CROSS_COMPILE:
    description: "Cross compile prefix"
    required: false
    default: ""
    type: string
  CROSS_COMPILE_PKG_SUFFIX:
    description: "Cross compiler package suffix"
    required: false
    default: ""
    type: string
  PLATFORM:
    description: "Platform"
    required: false
    default: ""
    type: string
  UPLOAD:
    description: "Whether to upload artifacts"
    required: false
    default: true
    type: boolean

runs:
  using: "composite"
  steps:

    - name: Setup environment variables
      shell: bash
      run: |
        echo "ARCH=${{ inputs.ARCH }}" >> $GITHUB_ENV
        echo "CROSS_COMPILE=${{ inputs.CROSS_COMPILE }}" >> $GITHUB_ENV
        echo "CROSS_COMPILE_PKG_SUFFIX=${{ inputs.CROSS_COMPILE_PKG_SUFFIX }}" >> $GITHUB_ENV
        echo "PLATFORM=${{ inputs.PLATFORM }}" >> $GITHUB_ENV

    - name: Install dependencies
      shell: bash
      run: |
        CROSS_COMPILE_PKG_SUFFIX=${{ env.CROSS_COMPILE_PKG_SUFFIX }} sh setup-dependencies.sh
        if [ "$CROSS_COMPILE_PKG_SUFFIX" = "mingw-w64-aarch64" ]; then
          echo `realpath llvm-mingw-*/bin/` >> $GITHUB_PATH
        fi

    - name: Build FFmpeg
      shell: bash
      run: |
        ARCH=${{ env.ARCH }} CROSS_COMPILE=${{ env.CROSS_COMPILE }} PLATFORM=${{ env.PLATFORM }} sh build.sh
        mkdir -pv dist/
        EXT=""
        [ "${{ env.OS }}" = "windows" ] && EXT=".exe"
        cp build/ffmpeg*/ffmpeg$EXT dist/ffmpeg_${{ env.OS }}_${{ env.ARCH }}$EXT
        echo "TOP:"
        ls .
        echo "DIST:"
        ls dist/

    - name: Upload package
      uses: actions/upload-artifact@v4.3.1
      if: ${{ inputs.UPLOAD == 'true' }}
      with:
        if-no-files-found: error
        name: ${{ env.UPLOAD_NAME }}
        path: |
          dist/*
